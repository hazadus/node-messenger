version: "3"
services:
  next-app:
    container_name: next-app
    build:
      context: .
      dockerfile: ./frontend/Dockerfile
    networks:
      - alphanetwork
    ports:
      - 3000:3000

  api:
    container_name: api
    build:
      context: .
      dockerfile: ./backend/Dockerfile
    networks:
      - alphanetwork
    ports:
      - 4000:4000
    environment:
      - CLIENT_ORIGIN="http://localhost:3000"
      - DATABASE_URL="mongodb://mongodb1:27017/messenger?replicaSet=rs0&retryWrites=true&w=majority&directConnection=true"

  mongodb1:
    image: mongo:latest
    networks:
      - alphanetwork
    volumes:
      - ./docker/mongodb:/data/db
      - config1:/data/configdb
    ports:
      - 30001:27017
    entrypoint: ["/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0"]

  mongodb2:
    image: mongo:latest
    networks:
      - alphanetwork
    ports:
      - 30002:27017
    entrypoint: ["/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0"]

  mongodb3:
    image: mongo:latest
    networks:
      - alphanetwork
    ports:
      - 30003:27017
    entrypoint: ["/usr/bin/mongod", "--bind_ip_all", "--replSet", "rs0"]

  mongoclient:
    image: mongo
    networks:
      - alphanetwork
    volumes:
      - ./docker:/deployment_scripts
    depends_on:
      - mongodb1
      - mongodb2
      - mongodb3
    entrypoint:
      - /deployment_scripts/initiate_replica.sh

networks:
  alphanetwork:

volumes:
  config1:
